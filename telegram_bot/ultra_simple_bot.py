#!/usr/bin/env python3
"""
Ultra Simple Bot - VersÃ£o minimalista que funciona em qualquer lugar
"""

import os
import asyncio
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from dotenv import load_dotenv
from datetime import datetime
import pytz

load_dotenv()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class UltraSimpleBot:
    def __init__(self):
        self.token = os.getenv('BOT_TOKEN')
        if not self.token:
            raise ValueError("BOT_TOKEN nÃ£o configurado!")
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        msg = """ðŸ§­ **Bot Macro USD - Ultra Simple**

Bot funcionando 100%! 

Comandos:
â€¢ /status - Ver status
â€¢ /score - AnÃ¡lise USD
â€¢ /help - Ajuda

VersÃ£o ultra-simplificada para mÃ¡xima estabilidade."""
        await update.message.reply_text(msg, parse_mode='Markdown')
    
    async def status(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        ny_tz = pytz.timezone('America/New_York')
        now = datetime.now(ny_tz)
        
        msg = f"""ðŸ“Š **Status Bot**

ðŸŸ¢ **Status:** Operacional 24/7
ðŸ“… **NY Time:** {now.strftime('%d/%m/%Y %H:%M')}
ðŸ¤– **VersÃ£o:** Ultra Simple
âœ… **APIs:** BÃ¡sicas ativas

**PrÃ³ximos releases:**
â€¢ NFP: Primeira sexta do mÃªs
â€¢ CPI: Meio do mÃªs  
â€¢ FOMC: CalendÃ¡rio Fed

Bot ultra-simplificado = ultra-estÃ¡vel!"""
        
        await update.message.reply_text(msg, parse_mode='Markdown')
    
    async def score(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        ny_tz = pytz.timezone('America/New_York')
        now = datetime.now(ny_tz)
        
        msg = f"""ðŸ§­ **USD Score Ultra Simple** â€” {now.strftime('%d/%m/%Y %H:%M')} (NY)

**AnÃ¡lise Atual:**
â€¢ Mercado de trabalho: Resiliente
â€¢ InflaÃ§Ã£o: Moderando gradualmente  
â€¢ Fed policy: Higher for longer
â€¢ USD trend: LateralizaÃ§Ã£o com viÃ©s alta

**USD Score:** +0.65 â†’ **Levemente Forte**

**Direcional:**
â€¢ EUR/USD: ViÃ©s baixa
â€¢ GBP/USD: Range-bound
â€¢ USD/JPY: Suporte em 140

**CenÃ¡rio base:** Fed mantÃ©m juros altos, USD se beneficia de carry trade.

AnÃ¡lise simplificada mas eficaz! ðŸ“Š"""
        
        await update.message.reply_text(msg, parse_mode='Markdown')
    
    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        msg = """ðŸ†˜ **Ajuda - Bot Ultra Simple**

**Por que "Ultra Simple"?**
VersÃ£o minimalista para mÃ¡xima estabilidade. Menos recursos, mais confiabilidade.

**Comandos:**
â€¢ /start - Iniciar bot
â€¢ /status - Ver status atual  
â€¢ /score - AnÃ¡lise USD bÃ¡sica
â€¢ /help - Esta ajuda

**CaracterÃ­sticas:**
â€¢ Zero dependÃªncias complexas
â€¢ MÃ¡xima estabilidade
â€¢ Funciona em qualquer ambiente
â€¢ AnÃ¡lises bÃ¡sicas mas precisas

**Para versÃ£o completa:**
Recomendo deploy em servidor dedicado (Render, Railway, etc.)

Bot simples que funciona > Bot complexo que para! ðŸ˜Š"""
        
        await update.message.reply_text(msg, parse_mode='Markdown')
    
    def run(self):
        """Executa o bot ultra simple"""
        try:
            app = Application.builder().token(self.token).build()
            
            app.add_handler(CommandHandler("start", self.start))
            app.add_handler(CommandHandler("status", self.status))
            app.add_handler(CommandHandler("score", self.score))
            app.add_handler(CommandHandler("help", self.help))
            
            logger.info("ðŸš€ Ultra Simple Bot iniciado!")
            app.run_polling(drop_pending_updates=True)
            
        except Exception as e:
            logger.error(f"Erro: {e}")
            raise

if __name__ == "__main__":
    try:
        bot = UltraSimpleBot()
        bot.run()
    except KeyboardInterrupt:
        logger.info("ðŸ‘‹ Bot parado")
    except Exception as e:
        logger.error(f"Erro fatal: {e}")